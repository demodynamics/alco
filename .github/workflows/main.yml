name: Deploy to EKS

env: # A map of environment variables that are available to all jobs and steps in the workflow
  APPLICATION_NAME  : "alco24"
  PACKAGE_HASH      : "${{ github.sha }}" # github.sha - current running commit's hash (Everytime when you make a commit to save your work, Git creates a unique ID (a.k.a. the "SHA" or "hash") that allows you to keep record under that hash)

on:
  workflow_dispatch: # This lets you manually run your pipeline from the GitHub Actions UI. Without it, your workflow runs only on push or pull_request. But sometimes, you want to trigger it yourself.

  
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch: # This lets you manually run your pipeline from the GitHub Actions UI. Without it, your workflow runs only on push or pull_request. But sometimes, you want to trigger it yourself.

jobs:
  deploy-dev:
    uses: ./.github/workflows/build-deploy.yml
    with:
      environment      : "dev"
      ecr_repo_name    : "alco-front"
      application_name : "alco24"
      role_session_name: "github-actions-dev"
      eks_cluster_name : "main-dev"
      skip_deploy_steps: true  # this skips steps

    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN_ALCO_24_DEV }}
      AWS_REGION  : ${{ secrets.AWS_REGION_ALCO_24_DEV }}

  # deploy-prod:
  #   uses: ./.github/workflows/deploy.yaml
  #   with:
  #     environment      : "prod"
  #     ecr_repo_name    : "front-prod"
  #     application_name : "alco24-prod"
  #     role_session_name: "github-actions-prod"
  #     skip_deploy_steps: true  # this skips steps
  #     eks_cluster_name : "main-prod"

  #   secrets:
  #     AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN_ALCO_24_PROD }}
  #     AWS_REGION  : ${{ secrets.AWS_REGION_ALCO_24_PROD }}


  notify:
    needs  : [deploy-dev] # Idnetifies any jobs that must complete successfully before this job run` dependency
    runs-on: ubuntu-latest
    env: # A map of environment variables that are available only for this job level
      SUCCESS: "Deploy is Succeeded!"
      FAILED : "Deploy is Failed!"

    steps:
      - name: Deployment Success Status Message
        if : ${{ needs.deploy-dev.result == 'success'}}
        run: |
          echo "${{ env.APPLICATION_NAME }} ${{ env.SUCCESS }}"
          echo "Deployed Package Tag is ${{ env.PACKAGE_HASH }}"

      - name: Deployment Failed Status Message
        env: # A map of environment variables that are available only for this step level
          LOCAL_VAR: "Please Improve Your Pipeline"
        if : ${{ needs.deploy-dev.result == 'failure' && needs.deploy-prod.result == 'failure'}}
        run: echo "${{ env.APPLICATION_NAME }} ${{ env.FAILED }}. $LOCAL_VAR"
